// Generated by CoffeeScript 1.12.7
(function() {
  var app, authorization_uri, client_id, client_secret, express, oauth2, redirect_uri;

  express = require('express');

  app = express();

  client_id = '0310fd43-beb0-407a-8dcd-c521e339b4f8';

  client_secret = 'ec978a52-7a81-4b7a-90e5-f65e4bc49584';

  oauth2 = require('simple-oauth2')({
    clientID: client_id,
    clientSecret: client_secret,
    site: 'https://accounts.moj.io',
    tokenPath: '/oauth2/token',
    authorizationPath: '/oauth2/authorize'
  });

  redirect_uri = 'http://localhost:3000/callback';

  authorization_uri = oauth2.authCode.authorizeURL({
    client_id: client_id,
    redirect_uri: redirect_uri,
    scope: ['full']
  });

  app.get('/auth', function(req, res) {
    return res.redirect(authorization_uri);
  });

  app.get('/unauth', function(req, res) {
    return console.log("res:" + res);
  });

  app.get('/callback', function(req, res) {
    var code, saveToken;
    saveToken = function(error, result) {
      var token;
      if (error) {
        console.log('Access Token Error', error.message);
        return res.send('Error: error.message');
      } else if (result != null) {
        token = oauth2.accessToken.create(result);
        return res.send('World: <br><a href="/">Unauthorize Mojio!</a><br>' + JSON.stringify(token));
      } else {
        return res.send('Error logging in, no token returned<br><a href="/auth">Log in with Mojio: Authorization Code Flow</a><br><a href="/password">Log in with Mojio: Password Flow</a>');
      }
    };
    code = req.query.code;
    console.log('/callback');
    return oauth2.authCode.getToken({
      code: code,
      redirect_uri: redirect_uri
    }, saveToken);
  });

  app.get('/password', function(req, res) {
    var saveToken;
    saveToken = function(error, result) {
      var token;
      if (error) {
        console.log('Access Token Error', error.message);
        return res.send('Error: error.message');
      } else if (result != null) {
        token = oauth2.accessToken.create(result);
        return res.send('World: <br><a href="/">Unauthorize Mojio!</a><br>' + JSON.stringify(token));
      } else {
        return res.send('Error logging in, no token returned<br><a href="/auth">Log in with Mojio: Authorization Code Flow</a><br><a href="/password">Log in with Mojio: Password Flow</a>');
      }
    };
    return oauth2.password.getToken({
      username: 'testing@moj.io',
      password: 'Test123!'
    }, saveToken);
  });

  app.get('/', function(req, res) {
    return res.send('Hello<br><a href="/auth">Log in with Mojio: Authorization Code Flow</a><br><a href="/password">Log in with Mojio: Password Flow</a>');
  });

  app.listen(3000);

  console.log('Express server started on port 3000!');

}).call(this);

//# sourceMappingURL=authorization_simple_auth.js.map
