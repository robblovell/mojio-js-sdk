// Generated by CoffeeScript 2.0.2
(function() {
  // version 4.0.0
  var FormUrlencoded, Http, MojioAuthSDK, MojioRestSDK, SignalR, _;

  Http = require('./HttpNodeWrapper');

  SignalR = require('./SignalRNodeWrapper');

  FormUrlencoded = require('form-urlencoded');

  _ = require('underscore');

  MojioAuthSDK = require('./MojioAuthSDK');

  module.exports = MojioRestSDK = class MojioRestSDK extends MojioAuthSDK {
    constructor(options = {}) {
      super(options);
    }

    // REST
    save(callback) { // PUT or POST depending on if it exists
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

    update(callback) { // PUT, throw error if it doesn't exist
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

    create(callback) { // POST, throw error if it already exists
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

    for(user, callback) {
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

    query(callback) { // GET
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

    destroy(callback) { // DELETE
      if ((callback != null)) {
        this.callback(callback);
      }
      return this;
    }

  };

}).call(this);
