// Generated by CoffeeScript 2.0.2
(function() {
  // version 5.0.0
  var MojioAsyncAwaitStyle, asyncIt, awaitIt;

  asyncIt = require('asyncawait/async');

  awaitIt = require('asyncawait/await');

  module.exports = MojioAsyncAwaitStyle = (function() {
    class MojioAsyncAwaitStyle {};

    // async initiates the fluent chain asynchronously using async await constructs that will be updated once
    // the request has returned. It is one of four ways to initiate fluent requests, one of which must be called for requests to be made.
    // When the actions of the chain are completed, the promise is updated and its then clause executed. Anyone
    // attaching to the promise is also called.
    // @public
    MojioAsyncAwaitStyle.prototype.asyncIt = asyncIt(function() {
      return awaitIt(this.stateMachine.initiate(function(error, result) {
        if (result != null) {
          return result;
        }
        if (error != null) {
          return error;
        }
      }));
    });

    return MojioAsyncAwaitStyle;

  })();

}).call(this);

//# sourceMappingURL=MojioAsyncAwaitStyle.js.map
